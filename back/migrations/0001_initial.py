# Generated by Django 5.2.7 on 2025-10-21 19:16

import back.models.users_models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=back.models.users_models.avatar_upload_path)),
                ('bio', models.TextField(blank=True, verbose_name='О себе')),
                ('show_my_requests', models.BooleanField(default=True, verbose_name='Показывать мои заявки')),
                ('show_my_responses', models.BooleanField(default=True, verbose_name='Показывать мои отклики')),
                ('show_my_reviews', models.BooleanField(default=True, verbose_name='Показывать мои отзывы')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification_type', models.CharField(choices=[('new_response', 'New Response'), ('response_accepted', 'Response Accepted'), ('new_review', 'New Review')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepairRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('device_type', models.CharField(choices=[('fridge', 'Refrigerator'), ('washer', 'Washing Machine'), ('oven', 'Oven'), ('dishwasher', 'Dishwasher'), ('other', 'Other')], max_length=50)),
                ('address', models.TextField()),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('desired_completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('active', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('repair_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='back.repairrequest')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='RepairRequestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='repair_requests/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('is_public', models.BooleanField(default=True)),
                ('repair_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='back.repairrequest')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('favorite', 'Избранное'), ('watching', 'Смотрю'), ('applied', 'Подался'), ('completed', 'Выполнено')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='WorkerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('experience', models.PositiveIntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('is_verified', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=back.models.users_models.avatar_upload_path)),
                ('bio', models.TextField(blank=True, verbose_name='О себе')),
                ('show_my_responses', models.BooleanField(default=True, verbose_name='Показывать мои отклики')),
                ('show_my_reviews', models.BooleanField(default=True, verbose_name='Показывать мои отзывы')),
                ('show_my_rating', models.BooleanField(default=True, verbose_name='Показывать мой рейтинг')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='worker_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('proposed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='sent', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repair_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='back.repairrequest')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('repair_request', 'worker')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('repair_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='back.repairrequest')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('repair_request', 'customer')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Вход в систему'), ('logout', 'Выход из системы'), ('register', 'Регистрация'), ('profile_update', 'Обновление профиля'), ('password_change', 'Смена пароля'), ('avatar_update', 'Обновление аватара'), ('request_create', 'Создание заявки'), ('request_update', 'Обновление заявки'), ('request_delete', 'Удаление заявки'), ('response_create', 'Создание отклика'), ('response_accept', 'Принятие отклика'), ('review_create', 'Создание отзыва'), ('favorite_add', 'Добавление в избранное'), ('favorite_remove', 'Удаление из избранного')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('target_model', models.CharField(blank=True, max_length=100)),
                ('target_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='back_userac_user_id_d68214_idx'), models.Index(fields=['activity_type', 'created_at'], name='back_userac_activit_8a752c_idx')],
            },
        ),
        migrations.CreateModel(
            name='ListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('repair_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list_items', to='back.repairrequest')),
                ('user_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='back.userlist')),
            ],
            options={
                'ordering': ['-added_at'],
                'unique_together': {('user_list', 'repair_request')},
            },
        ),
    ]
